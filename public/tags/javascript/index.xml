<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on ~/.andy_winarko</title>
    <link>/tags/javascript/</link>
    <description>Recent content in Javascript on ~/.andy_winarko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 24 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Re-created new keyword in JS</title>
      <link>/blog/re-created-new-keyword-in-js/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/re-created-new-keyword-in-js/</guid>
      <description>function Person(saying) { this.saying = saying } Person.prototype.talk = function() { console.log(&#39;I say:&#39;, this.saying); } // replicate what `new` does function spawn(constructor) { // 1. create a new object var obj = {} // 2. set the prototype Object.setPrototypeOf(obj, constructor.prototype) var argsArray = Array.prototype.slice.apply(arguments) // 3. execute constructor with `this` // 4. return the created object, unless the constructor return the object return constructor.apply(obj, argsArray.slice(1)) || obj } var crockforg = spawn(Person, &#39;semicolans1!</description>
    </item>
    
    <item>
      <title>Understand `this` keyword in Javascript</title>
      <link>/blog/understand-this-keyword-in-javascript/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/understand-this-keyword-in-javascript/</guid>
      <description>/** * * Understand `this` and `bind` in javascript * `this` is reference to context where are you now * `bind` is property on a function */ const button = { onClick: null }; const dragon = { element: &#39;dirt&#39;, // technically breath property(which is a function) is know nothing about other property in this dragon object // they dont magically connect each other like class in java, or php. // but in this scope, this.</description>
    </item>
    
    <item>
      <title>Modern Javascript Cheat Sheet</title>
      <link>/blog/modern-javascript-cheat-sheet/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/modern-javascript-cheat-sheet/</guid>
      <description>Modern JavaScript Cheatsheet Image Credits: Ahmad Awais ⚡️
Introduction Motivation This document is a cheatsheet for JavaScript you will frequently encounter in modern projects and most contemporary sample code.
This guide is not intended to teach you JavaScript from the ground up, but to help developers with basic knowledge who may struggle to get familiar with modern codebases (or let&amp;rsquo;s say to learn React for instance) because of the JavaScript concepts used.</description>
    </item>
    
  </channel>
</rss>